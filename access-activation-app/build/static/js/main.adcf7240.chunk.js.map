{"version":3,"sources":["store/actions/ActionTypes.ts","components/home/Banner.tsx","components/home/Sellout.tsx","views/Home.tsx","services/auth.service.ts","services/index.ts","config.ts","components/dashboard/GenerateVIsitorForm.tsx","services/access.service.ts","components/dashboard/GenerateId.tsx","components/dashboard/CurrentIdStatus.tsx","components/dashboard/GetVisitors.tsx","views/Dashboard.tsx","components/auth/LoginComponent.tsx","store/actions/UserActions.ts","views/Login.tsx","components/common/Navbar.tsx","components/common/Footer.tsx","components/auth/RegisterEmployee.tsx","views/Register.tsx","components/auth/PrivateRoute.tsx","views/Unauthorized.tsx","views/UserProfile.tsx","components/auth/ValidateID.tsx","services/validate.service.ts","App.tsx","serviceWorker.ts","store/reducers/UserReducer.ts","store/reducers/index.ts","store/ConfigureStore.ts","index.tsx","assets/images/Easy.svg","assets/images/Secure.svg","assets/images/cross-palatform.svg"],"names":["LOGIN_USER","LOGOUT_USER","Banner","props","react_default","a","createElement","className","dist_default","speed","text","Button","size","aria-label","color","react_fontawesome_index_es","icon","Sellout","Container","Row","Col","xs","sm","src","Easy","alt","width","Secure","crossPlatform","AppHome","document","title","fluid","Banner_Banner","Sellout_Sellout","Component","loginEmployee","email","password","ajax","post","registerEmployee","employee","axios","create","baseURL","headers","content-type","connect","state","Object","objectSpread","user","UserReducer","_useState","useState","_useState2","slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","visitorEmail","setVisitorEmail","_useState7","_useState8","contactNo","setContactNo","_useState9","_useState10","formErrors","setFormErrors","isValidEmail","RegExp","test","Form","onSubmit","e","preventDefault","employeeId","token","authorization","generateVisitorId","id","accessToken","then","res","console","log","swal","timer","catch","err","response","data","error","FormGroup","Label","for","Input","type","onChange","target","value","required","invalid","FormFeedback","modal","setModal","generateNewID","toggleModal","react","CardHeader","CardBody","ButtonGroup","onClick","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","GenerateVIsitorForm","CurrentIdStatus","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uuid","activationStartTime","activationEndTime","idStatus","empId","getIdCard","jwt","_this2","get","concat","setState","time","date","moment","utc","toDate","local","format","_this3","Card","toUpperCase","dist_modules","JSON","stringify","bgColor","fgColor","level","style","convertTime","React","GetVisitors","visitors","activeVisitor","bind","assertThisInitialized","getVisitors","visitor","prevState","map","index","key","displayVisitor","getTime","_this4","Fragment","Table","hover","responsive","getTableContent","getAccessDate","AppDashboard","CardColumns","dashboard_CurrentIdStatus","dashboard_GenerateId","dashboard_GetVisitors","dispatch","loginUser","payload","setEmail","setPassword","alert","isValidPassword","length","Alert","window","location","href","name","placeholder","block","AppLogin","auth_LoginComponent","AppNavbar","auth","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","logoutUser","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","isLoggedIn","Footer","Register","confirmPassword","setConfirmPassword","_useState11","_useState12","_useState13","_useState14","isPasswordValid","isEmailValid","RegisterEmployee","RegisterEmployee_Register","_ref","component","rest","objectWithoutProperties","react_router","assign","render","to","pathname","from","unauthorized","Jumbotron","history","back","ValidateID","handleScan","parse","validateVisitorId","handleError","lib_default","delay","onError","onScan","library","add","faUserCircle","faChevronCircleRight","faSync","App","common_Navbar","react_router_dom","path","exact","Home","PrivateRoute","Dashboard","UserProfile","Footer_Footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","INITIAL_STATE","combineReducers","arguments","undefined","action","_action$payload","_action$payload2","persistConfig","storage","LocalForage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ConfigureStore","ReactDOM","es","integration_react","loading","src_App","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.adcf7240.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nexport const LOGIN_USER: Action = {\n    type: 'LOGIN_USER'\n};\nexport const LOGOUT_USER: Action = {\n    type: 'LOGOUT_USER'\n}","import React from 'react';\nimport '../../assets/styles/home/banner.scss';\nimport { Button, Container } from 'reactstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport Typer from 'react-typing-effect';\n\ninterface IBannerProps {\n}\n\nexport const Banner = (props: IBannerProps) => {\n    return(\n        <section className=\"banner\">\n            <header className=\"viewport-header\">\n            <div className=\"image-wrap\"></div>\n            <div className=\"banner-overlay\"></div>\n            <div className=\"banner-content text-light\">\n                <div className=\"text-center\">\n                    <h2 className=\"banner-title\">Access Activation Application</h2>\n                    <h3 className=\"mt-2\">\n                        Replace ID cards with a solution that is\n                    </h3>\n                    <h2 className=\"mt-3\">\n                    {/* Add typer content here */}\n                        <Typer speed=\"100\" text={['Reliable.', 'Robust.', 'Secure.']}></Typer>\n                    </h2>\n                    <Button size=\"lg\" aria-label=\"Learn More\" color=\"primary\" className=\"mt-4 shadow-sm\">Learn more <FontAwesomeIcon icon=\"chevron-circle-right\"/></Button>\n                </div>\n            </div>\n            </header>\n        </section>\n    )\n}","import React from 'react';\nimport '../../assets/styles/home/sellout.scss';\nimport { Container, Row, Col } from 'reactstrap';\nimport Easy from '../../assets/images/Easy.svg';\nimport Secure from '../../assets/images/Secure.svg'\nimport crossPlatform from '../../assets/images/cross-palatform.svg';\n\ninterface ISelloutProps {}\n\nexport const Sellout = (props: ISelloutProps) => {\n    return(\n        <section className=\"sellout\">\n        <Container>\n            <Row>\n                <Col xs=\"12\" sm=\"6\" className=\"text-center content-left\">\n                    <img src={Easy} alt=\"easy\" width=\"250px\"/>\n                </Col>\n                <Col xs=\"12\" sm=\"6\" className=\"text-center\">\n                    <div className=\"h-100 d-flex align-items-center flex-column justify-content-center\">\n                    <h2 className=\"text-primary \">\n                        Easy to use\n                    </h2>\n                    <h3 className=\"text-secondary\">\n                        So easy that, you don't need to become a robot.\n                    </h3>\n                    </div>\n                </Col>\n            </Row>\n            <Row className=\"mt-4\">\n                <Col xs=\"12\" sm=\"6\" className=\"text-center content-left\">\n                    <div className=\"h-100 d-flex align-items-center flex-column justify-content-center\">\n                    <h2 className=\"text-primary \">\n                        Secure\n                    </h2>\n                    <h3 className=\"text-secondary\">\n                        Industry proven security measures included. Hackers Beware!\n                    </h3>\n                    </div>\n                </Col>\n                <Col xs=\"12\" sm=\"6\" className=\"text-center\">\n                    <img src={Secure} alt=\"easy\" width=\"250px\"/>\n                </Col>\n            </Row>\n            <Row className=\"mt-4\">\n                <Col xs=\"12\" sm=\"6\" className=\"text-center content-left\">\n                    <img src={crossPlatform} alt=\"easy\" width=\"250px\"/>\n                </Col>\n                <Col xs=\"12\" sm=\"6\" className=\"text-center\">\n                    <div className=\"h-100 d-flex align-items-center flex-column justify-content-center\">\n                    <h2 className=\"text-primary \">\n                        Cross Platform\n                    </h2>\n                    <h3 className=\"text-secondary\">\n                        Works everywhere - Mobile, Web, Desktop and anywhere else you would want.\n                    </h3>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n        </section>\n    )\n}","import React, {Component, Fragment} from 'react';\nimport { Banner } from '../components/home/Banner';\nimport { Sellout } from '../components/home/Sellout';\nimport { Container } from 'reactstrap';\n\ninterface IAppHomeProps{}\n\nclass AppHome extends Component<IAppHomeProps> {\n    \n    componentDidMount() {\n        document.title = 'Access Activation App - Home'\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Banner/>\n                <Sellout/>\n            </Container>\n        )\n    }\n}\n\nexport default AppHome;","import {ajax} from './index';\nimport { IUser } from '../interfaces';\n\nexport const loginEmployee = (email: string, password: string) => {\n    return ajax.post('/auth/login', {\n        email,\n        password\n    })\n}\n\nexport const registerEmployee = (employee: IUser) => {\n    return ajax.post('/employee', employee)\n}","import axios from 'axios';\nimport { config } from '../config';\nimport { loginEmployee } from './auth.service';\n\nexport const ajax = axios.create({\n    baseURL: config.url,\n    headers: {\n        'content-type': 'application/json'\n    }\n})\n\n// Export services from other modules.\n\nexport {loginEmployee};","// dev\nexport const config = {\n    url: 'http://localhost:8080/api'\n}\n\n// prod","import React, {useState} from 'react';\nimport {Button, Form, FormFeedback, FormGroup, Input, Label} from 'reactstrap';\nimport {connect} from \"react-redux\";\nimport {generateVisitorId} from \"../../services/access.service\";\nimport swal from 'sweetalert';\n\nfunction GenerateVisitorIDForm(props: any) {\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [visitorEmail, setVisitorEmail] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [formErrors, setFormErrors] = useState({\n        email: ''\n    })\n\n    function handleFirstNameChange(e: any) {\n        e.preventDefault();\n        setFirstName(e.target.value);\n    }\n\n    function handleLastNameChange(e: any) {\n        e.preventDefault();\n        setLastName(e.target.value);\n    }\n\n    function handleEmailChange(e: any) {\n        e.preventDefault();\n        setVisitorEmail(e.target.value);\n        isValidEmail() ? setFormErrors({\n            email: 'valid',\n        }) : setFormErrors({\n            email: 'Invalid email address',\n        })\n    }\n\n    function handleContactChange(e: any) {\n        e.preventDefault();\n        setContactNo(e.target.value);\n    }\n\n    function isValidEmail(): boolean {\n        if(!visitorEmail){return true}\n        const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n        const sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n        const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n        const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n        const sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n        const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n        const sDomain_ref = sAtom;\n        const sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n        const sWord = '(' + sAtom + '|' + sQuotedString + ')';\n        const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n        const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n        const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n        const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n        const reValidEmail = new RegExp(sValidEmail);\n\n        const isValid = reValidEmail.test(visitorEmail);\n        return isValid;\n    }\n\n    function handleFormSubmit(e: any) {\n        e.preventDefault();\n        if(isValidEmail()){\n            generateVisitorId(props.user.user.id, props.user.user.email,\n                firstName, lastName,\n                contactNo, visitorEmail, props.user.accessToken).then(res => {\n                    console.log(res);\n                    swal({\n                        title: 'Success',\n                        text: 'ID generated successfully.',\n                        icon: 'success',\n                        timer: 3000\n                    })\n            }).catch(err => {\n                swal({\n                    title: 'Error',\n                    text: err.response.data.error,\n                    icon: 'error',\n                    timer: 3000\n                })\n            })\n        }\n    }\n\n    return (\n        <Form onSubmit={handleFormSubmit}>\n            <FormGroup>\n                <Label for=\"firstName\">\n                    First name of visitor:\n                </Label>\n                <Input type=\"text\" id=\"firstName\" onChange={handleFirstNameChange} required/>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"lastName\">\n                    Last name of visitor:\n                </Label>\n                <Input type=\"text\" id=\"lastName\" onChange={handleLastNameChange} required/>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"email\">\n                    Email of visitor:\n                </Label>\n                <Input type=\"text\" invalid={!isValidEmail()} id=\"email\" onChange={handleEmailChange} required/>\n                <FormFeedback>{formErrors.email}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"contact\">\n                    Contact no. of visitor:\n                </Label>\n                <Input type=\"text\" id=\"contact\" onChange={handleContactChange} required/>\n            </FormGroup>\n            <div className=\"text-center\">\n                <Button type=\"submit\" color=\"outline-primary\">Generate ID Card</Button>\n            </div>\n        </Form>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(GenerateVisitorIDForm);\n\n","import {ajax} from './index';\n\nexport function generateId(id: number, email: string, token: string): Promise<any> {\n    return ajax.post('/generateid', {\n        email,\n        id\n    }, {\n        headers: {\n            'authorization': token\n        }\n    });\n}\n\nexport function generateVisitorId(employeeId: number, email: string,\n                                  firstName: string, lastName: string,\n                                  contactNo: string, visitorEmail: string, token: string): Promise<any> {\n    return ajax.post('/visitor', {\n        employeeId,\n        email,\n        firstName,\n        lastName,\n        contactNo,\n        visitorEmail\n    }, {\n        headers: {\n            'authorization': token\n        }\n    });\n}\n\nexport function getEmployeeId(id: number, jwt: string): Promise<any> {\n    return ajax.get(`/access-id/${id}`, {\n        headers: {\n            'authorization': jwt\n        }\n    });\n}\n\nexport function getVisitors(id: number, jwt: string): Promise<any> {\n    return ajax.get(`/visitor/${id}`, {\n        headers: {\n            'authorization': jwt\n        }\n    })\n}\n","import React, {Component, Fragment, useRef, useState} from 'react';\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    CardBody,\n    CardHeader,\n    Modal,\n    ModalBody,\n    ModalHeader\n} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {generateId} from \"../../services/access.service\";\nimport {IUserInfo} from \"../../interfaces\";\nimport swal from \"sweetalert\";\nimport GenerateVisitorIDForm from \"./GenerateVIsitorForm\";\n\ninterface IGenerateIdProps {\n    user?: IUserInfo;\n}\n\n\nfunction GenerateId(props: IGenerateIdProps) {\n\n    const [modal, setModal] = useState(false);\n\n    function generateNewID(e: any) {\n        e.preventDefault();\n        if(props.user && props.user.user.id) {\n            generateId(props.user.user.id, props.user.user.email, props.user.accessToken).then(\n                res => {\n                    swal({\n                        title: \"Success\",\n                        text: \"ID generated successfully.\",\n                        icon: \"success\",\n                        timer: 3000\n                    })\n                }\n            ).catch(err => {\n                console.log(err);\n                swal({\n                    title: \"Failed\",\n                    text: err.response.data.error,\n                    icon: \"error\",\n                    timer: 3000\n                })\n            })\n\n        }\n    }\n\n    function toggleModal() {\n        setModal(!modal);\n    }\n\n    return(\n        <Fragment>\n            <CardHeader className=\"bg-primary\">\n                Generate New ID\n            </CardHeader>\n            <CardBody>\n                <ButtonGroup>\n                    <Button onClick={(e) => generateNewID(e)} outline color=\"primary\">Generate New ID</Button>\n                    <Button outline onClick={toggleModal} color=\"secondary\">Generate New Visitor ID</Button>\n                </ButtonGroup>\n            </CardBody>\n            <Modal isOpen={modal} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Generate Visitor ID</ModalHeader>\n                <ModalBody>\n                    <GenerateVisitorIDForm/>\n                </ModalBody>\n            </Modal>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(GenerateId);\n","import React, {useEffect, useState} from 'react';\nimport {Button, Card, CardBody, CardHeader} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {IUserInfo} from \"../../interfaces\";\nimport {getEmployeeId} from \"../../services/access.service\";\nimport {QRCode} from 'react-qr-svg';\nimport moment from 'moment';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport swal from 'sweetalert';\n\ninterface CurrentIdProps {\n    user?: IUserInfo;\n}\n\ninterface ICurrentIdState {\n    uuid: string;\n    activationStartTime: string;\n    activationEndTime: string;\n    idStatus: string;\n    empId: string | number\n}\n\nclass CurrentIdStatus extends React.Component<CurrentIdProps, ICurrentIdState>{\n\n    constructor(props: CurrentIdProps) {\n        super(props);\n        this.state = {\n            uuid: '',\n            activationStartTime: '',\n            activationEndTime: '',\n            idStatus: '',\n            empId: ''\n        }\n    }\n    componentDidMount(): void {\n        this.getIdCard();\n    }\n\n    getIdCard() {\n        if (this.props.user && this.props.user.user.id) {\n            getEmployeeId(this.props.user.user.id, this.props.user.accessToken).then((res) => {\n                console.log(res.data.employee);\n                const id = res.data.employee;\n                this.setState({\n                    uuid: id.uuid,\n                    activationEndTime: id.activationEndTime,\n                    activationStartTime: id.activationStartTime,\n                    idStatus: id.state,\n                    empId: id.employeeId\n                })\n            }).catch(err => {\n                swal({\n                    title: 'Error',\n                    icon: 'error',\n                    text: err.response.data.error,\n                    timer: 3000\n                })\n                console.log(err);\n            })\n        }\n    }\n\n    convertTime(time: string) {\n        const date = moment.utc(time).toDate();\n        return moment(date).local().format('YYYY-MM-DD dddd HH:mm:ss A');\n    }\n\n    render(){\n    return (\n        <Card className=\"shadow-sm border-0 medium-card bg-light text-white text-center\">\n            <CardHeader className=\"bg-primary\">\n                Your current ID status: <span>{this.state.idStatus.toUpperCase()}</span>\n                <span className=\"float-right\">\n                    <Button onClick={() => this.getIdCard()} size=\"sm\" outline className=\"text-white\" aria-label=\"Refresh\">\n                        <FontAwesomeIcon icon=\"sync\"></FontAwesomeIcon>\n                    </Button>\n                </span>\n            </CardHeader>\n            <CardBody>\n                <p className=\"card-text text-dark my-2 text-center\">\n                    Employee Id: {this.state.empId}\n                </p>\n                <QRCode value={JSON.stringify({uuid: this.state.uuid, type: 'employee', empId: this.state.empId})}\n                        className=\"mt-4\" bgColor=\"#FFFFFF\"\n                        fgColor=\"#000000\"\n                        level=\"Q\"\n                        style={{ width: 250\n                        }}></QRCode>\n                <p className=\"card-text mt-2 text-dark text-center\">\n                    Activation Start Time: {this.convertTime(this.state.activationStartTime)}\n                </p>\n                <p className=\"card-text text-dark text-center\">\n                    Activation End Time: {this.convertTime(this.state.activationEndTime)}\n                </p>\n            </CardBody>\n        </Card>\n    )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(CurrentIdStatus);\n","import React from 'react';\nimport {Button, CardBody, CardHeader, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {getVisitors} from \"../../services/access.service\";\nimport swal from \"sweetalert\";\nimport moment from \"moment\";\nimport GenerateVisitorIDForm from \"./GenerateVIsitorForm\";\nimport {QRCode} from \"react-qr-svg\";\n\n\nclass GetVisitors extends React.Component<any, any> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            visitors: [],\n            modal: false,\n            activeVisitor: {}\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.getVisitors();\n    }\n\n    getVisitors() {\n        getVisitors(this.props.user.user.id, this.props.user.accessToken).then(res => {\n            this.setState({\n                visitors: res.data.visitor\n            });\n        }).catch(err => {\n            swal({\n                title: 'Error',\n                icon: 'error',\n                text: err.response.data.error,\n                timer: 3000\n            })\n            console.log(err);\n        });\n    }\n\n    displayVisitor(e: any, visitor: any) {\n        e.preventDefault();\n        this.setState({\n            activeVisitor: visitor\n        })\n        this.toggleModal();\n    }\n\n    getTime(time: any) {\n        const date = moment.utc(time).toDate();\n        return moment(date).local().format('DD/MM/YYYY');\n    }\n\n    getAccessDate(time: any) {\n        const date = moment.utc(time).toDate();\n        return moment(date).local().format('dddd, MMMM DD, YYYY h:mm A');\n    }\n\n    toggleModal() {\n        this.setState((prevState: any) => ({\n            modal: !prevState.modal\n        }))\n    }\n\n    getTableContent(){\n        const fields = this.state.visitors.map((visitor: any, index: number) => {\n            return (\n                <tr key={index} onClick={(e) => this.displayVisitor(e, visitor)} className=\"open-modal\">\n                    <td>\n                        {visitor.lastName}\n                    </td>\n                    <td>\n                        {this.getTime(visitor.activationStartTime)}\n                    </td>\n                    <td>\n                        {visitor.state}\n                    </td>\n                </tr>\n            )\n        })\n        return fields;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <CardHeader className=\"bg-primary\">\n                    Your past visitors <span className=\"float-right\">\n                    <Button onClick={() => this.getVisitors()} size=\"sm\" outline className=\"text-white\"\n                            aria-label=\"Refresh\">\n                        <FontAwesomeIcon icon=\"sync\"></FontAwesomeIcon>\n                    </Button>\n                </span>\n                </CardHeader>\n                <CardBody className=\"table-expand\">\n                    <Table hover responsive>\n                        <thead>\n                            <tr>\n                                <th>\n                                    Last Name\n                                </th>\n                                <th>\n                                    Activation Date\n                                </th>\n                                <th>\n                                    Status\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.getTableContent()}\n                        </tbody>\n                    </Table>\n                    <Modal isOpen={this.state.modal} className=\"border-0\" toggle={this.toggleModal}>\n                        <ModalHeader className=\"text-center text-white bg-secondary\">\n                            Visitor\n                        </ModalHeader>\n                        <ModalBody className=\"text-center\">\n                            <p>{this.state.activeVisitor.firstName} {this.state.activeVisitor.lastName}</p>\n                            <QRCode value={JSON.stringify({uuid: this.state.activeVisitor.uuid, type: 'visitor', empId: this.state.activeVisitor.employeeId})}\n                                    className=\"mt-4\" bgColor=\"#FFFFFF\"\n                                    fgColor=\"#000000\"\n                                    level=\"Q\"\n                                    style={{ width: 250\n                                    }}></QRCode>\n                            <p className=\"mt-2\">Authorized Employee: {this.state.activeVisitor.employeeId}</p>\n                            <p>{this.getAccessDate(this.state.activeVisitor.activationStartTime)}</p>\n                        </ModalBody>\n                    </Modal>\n                </CardBody>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(GetVisitors);\n","import React, {Component, Fragment} from 'react';\nimport {\n    Card,\n    CardBody, CardColumns,\n    CardDeck, CardHeader,\n    Container, Row,\n} from 'reactstrap';\nimport GenerateId from \"../components/dashboard/GenerateId\";\nimport CurrentIdStatus from \"../components/dashboard/CurrentIdStatus\";\n\nimport '../assets/styles/dashboard/dashboard.scss';\nimport GetVisitors from \"../components/dashboard/GetVisitors\";\n\nclass AppDashboard extends Component {\n\n    componentDidMount() {\n        document.title = 'Access Activation App - Dashboard';\n    }\n    render() {\n        return (\n            <section className=\"dashboard\">\n                <Container>\n                    <Row>\n                    <CardColumns className=\"mt-4\">\n                        <CurrentIdStatus/>\n                        <Card className=\"shadow-sm medium-card border-0 bg-light text-white text-center\">\n                            <GenerateId/>\n                        </Card>\n                        <Card className=\"shadow-sm medium-card border-0 bg-light text-white text-center visitors-card\">\n                            <GetVisitors/>\n                        </Card>\n                    </CardColumns>\n                    </Row>\n                </Container>\n            </section>\n        )\n    }\n}\n\nexport default AppDashboard;\n","import React, { useState, Fragment } from 'react';\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label, Button, Input, FormFeedback, Alert } from 'reactstrap';\nimport { loginEmployee } from '../../services';\nimport { connect } from 'react-redux';\nimport { IUserInfo } from '../../interfaces';\nimport { loginUser } from '../../store/actions/UserActions';\nimport { Action } from 'redux';\n\ninterface ILoginComponentProps {\n    loginUser?: any;\n    dispatch?: any;\n}\n\nfunction LoginComponent(props: ILoginComponentProps) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [formErrors, setFormErrors] = useState({\n        alert: '',\n        email: '',\n        password: ''\n    })\n\n    function handleEmailChange(e: any) {\n        e.preventDefault();\n        setEmail(e.target.value);\n        isValidEmail() ? setFormErrors({\n            email: 'valid',\n            password: formErrors.password,\n            alert: formErrors.alert\n        }) : setFormErrors({\n            email: 'Invalid email address',\n            password: formErrors.password,\n            alert: formErrors.alert\n        })\n\n    }\n\n    function handlePasswordChange(e: any) {\n        e.preventDefault();\n        setPassword(e.target.value);\n        isValidPassword() ? setFormErrors({\n            email: formErrors.email,\n            password: 'valid',\n            alert: formErrors.alert\n        }): setFormErrors({\n            email: formErrors.email,\n            password: 'Invalid Password',\n            alert: formErrors.alert\n        })\n    }\n\n    function isValidEmail(): boolean {\n        if(!email){return true}\n        const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n        const sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n        const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n        const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n        const sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n        const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n        const sDomain_ref = sAtom;\n        const sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n        const sWord = '(' + sAtom + '|' + sQuotedString + ')';\n        const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n        const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n        const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n        const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n        const reValidEmail = new RegExp(sValidEmail);\n        \n        const isValid = reValidEmail.test(email);\n        return isValid;\n    }\n\n    function isValidPassword(): boolean {\n        if(!password){return true}\n        return password.length > 3;\n    }\n\n    function onSubmit(e: any) {\n        e.preventDefault();\n        if(isValidEmail() && isValidPassword()) {\n            loginEmployee(email, password).then(res => {\n                props.loginUser({\n                        user: res.data.employee,\n                        accessToken: res.data.token\n                })\n                window.location.href = '/dashboard';\n            }).catch(err => {\n                console.log(err);\n                setFormErrors({\n                    alert: err.response.data.error,\n                    email: formErrors.email,\n                    password: formErrors.password\n                })\n            })\n        }\n    }\n\n    return(\n        <Fragment>\n            <Card className=\"shadow mt-4 medium-card bg-light border-0 text-dark\">\n                <CardHeader className=\"bg-primary text-white\">Sign In</CardHeader>\n                <CardBody>\n                    {(formErrors.alert) ? (<Alert color=\"danger\">{formErrors.alert}</Alert>) : null}\n                    <Form onSubmit={(e) => onSubmit(e)}>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input name=\"email\" invalid={!isValidEmail()} onChange={handleEmailChange} placeholder=\"eg. john.doe@example.com\" required></Input>\n                            <FormFeedback>{formErrors.email}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input name=\"password\" type=\"password\" invalid={!isValidPassword()} onChange={handlePasswordChange} placeholder=\"Password\" required></Input>\n                            <FormFeedback>{formErrors.password}</FormFeedback>\n                        </FormGroup>\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <Button block>Sign in</Button>\n                            <a className=\"small mt-2 text-decoration-none\" href=\"/register\" >Don't have an account?</a>\n                        </div>\n                    </Form>\n                </CardBody>\n            </Card>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n  })\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<Action>) => ({\n        loginUser: (payload: IUserInfo) => dispatch(loginUser(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\n","import { LOGIN_USER, LOGOUT_USER } from './ActionTypes';\nimport { IUserInfo } from '../../interfaces';\n\n\nexport const loginUser = (payload: IUserInfo) => {\n    return { \n        type: LOGIN_USER.type,\n        payload: {\n            accessToken: payload.accessToken,\n            user: payload.user\n        }\n    }\n};\n\nexport const logoutUser = (payload: IUserInfo) => ({\n    type: LOGOUT_USER.type,\n    payload: {\n        accessToken: payload.accessToken,\n        user: payload.user\n    }\n})","import React from 'react';\nimport { Container } from 'reactstrap';\nimport LoginComponent from '../components/auth/LoginComponent';\nimport '../assets/styles/auth/login.scss'\n\nexport const AppLogin = (props: any) => {\n\n    document.title = 'Access Activation App - Login'\n\n    return (\n        <section className=\"login\">\n            <Container className=\"login-container\">\n                <LoginComponent />\n            </Container>\n        </section>\n    )\n}","import React, { Component, Fragment } from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    Container,\n    NavLink,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    NavItem,\n    UncontrolledDropdown,\n    DropdownMenu,\n    DropdownItem,\n    DropdownToggle\n} from 'reactstrap';\nimport { Link, Router } from 'react-router-dom';\nimport '../../assets/styles/common/_navbar.scss';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../store/actions/UserActions';\nimport { IUserInfo } from '../../interfaces';\nimport { AnyAction } from 'redux';\n\ninterface IState {\n    isOpen: boolean;\n}\n\ninterface INavbarProps {\n    auth?: any;\n    logoutUser?: any;\n}\n\nclass AppNavbar extends Component<INavbarProps, IState> {\n\n    state: IState;\n\n    constructor(props: INavbarProps) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    isLoggedIn() {\n        if (!this.props.auth.accessToken) {\n            return (\n                <Fragment>\n                    <NavItem>\n                        <NavLink href=\"/\">Home</NavLink >\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/login\">Login</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/register\">Register</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"\">GitHub</NavLink>\n                    </NavItem>\n                </Fragment >\n            )\n        } else {\n            return (\n                <Fragment>\n                    <NavItem>\n                        <NavLink href=\"/\">Home</NavLink >\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/dashboard\">Dashboard</NavLink>\n                    </NavItem>\n                    <UncontrolledDropdown nav inNavbar>\n                        <DropdownToggle nav caret>\n                            {this.props.auth.user.firstName} {this.props.auth.user.lastName}\n                        </DropdownToggle>\n                        <DropdownMenu className=\"bg-light\" right>\n                            <DropdownItem href=\"/profile\" className=\"text-primary\">\n                                User Profile\n                            </DropdownItem>\n                            <DropdownItem href=\"/validate\" className=\"text-primary\">\n                                Validate ID\n                            </DropdownItem>\n                            <DropdownItem divider />\n                            <DropdownItem onClick={() => this.logoutUser()} className=\"text-primary\">\n                                Logout\n                            </DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Fragment >\n            )\n        }\n    }\n\n    logoutUser() {\n        this.props.logoutUser({\n            accessToken: '',\n            user: {\n                firstName: '',\n                lastName: '',\n                contactNo: '',\n                email: '',\n                password: '',\n                id: ''\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"sm\" color=\"primary\" className=\"shadow-sm app-navbar\">\n                <NavbarBrand href=\"/\" className=\"text-light\">\n                    Access Activation App\n                </NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"ml-auto text-center\" navbar>\n                        {this.isLoggedIn()}\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    auth: state.UserReducer\n})\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<AnyAction>) => ({\n    logoutUser: (payload: IUserInfo) => dispatch(logoutUser(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n","import React from 'react';\nimport { Container, Nav, NavItem, NavLink } from 'reactstrap';\n\ninterface IFooterProps {\n}\n\nexport const Footer = (props: IFooterProps) => {\n    return (\n        <section className=\"footer mt-4 bg-accent p-4\">\n            <Container className=\"text-right text-light\">\n                <h5>Access Activation Application</h5>\n                <small>Copyrights &copy; 2019 All rights reserved.</small>\n            </Container>\n        </section>\n    )\n}","import React, { Fragment, useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Label, Input, Button, CardTitle, CardHeader, FormFeedback } from 'reactstrap';\n\nimport '../../assets/styles/auth/register.scss';\nimport { registerEmployee } from '../../services/auth.service';\n\ninterface IRegisterProps {\n}\n\n\nexport const Register = (props: IRegisterProps) => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [formErrors, setFormErrors] = useState({\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    function handleFirstName(e: any) {\n        setFirstName(e.target.value);\n    }\n    function handleLastName(e: any) {\n        setLastName(e.target.value);\n    }\n    function handleEmail(e: any) {\n        setEmail(e.target.value);\n        isEmailValid() ? setFormErrors({\n            email: '',\n            password: formErrors.password,\n            confirmPassword: formErrors.confirmPassword\n        }) : setFormErrors({\n            email: 'Entered email is invalid',\n            password: formErrors.password,\n            confirmPassword: formErrors.confirmPassword\n        });\n    }\n    function handlePassword(e: any) {\n        setPassword(e.target.value);\n    }\n    function handleConfirmPassword(e: any) {\n        setConfirmPassword(e.target.value);\n        (isPasswordValid()) ? setFormErrors({\n            email: formErrors.email,\n            password: '',\n            confirmPassword: 'Passwords match'\n        }) : setFormErrors({\n            email: formErrors.email,\n            password: 'Passwords do not match',\n            confirmPassword: 'Passwords do not match'\n        });\n    }\n    function handleContact(e: any) {\n        setContactNo(e.target.value);\n    }\n    function isFormValid(): boolean {\n       return isEmailValid() && isPasswordValid();\n    }\n    function onSubmit(e: any) {\n        e.preventDefault();\n        console.log({\n            firstName,\n            lastName,\n            email,\n            password,\n            contactNo\n        })\n        registerEmployee({\n            firstName,\n            lastName,\n            email,\n            password,\n            contactNo\n        }).then(res => {\n            console.log(res);\n            window.location.href='/login'\n            //alert('success');\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    function isPasswordValid() {\n        if(!password && !confirmPassword){return true}\n        return password === confirmPassword && password.length > 3;\n    }\n    function isEmailValid() {\n        if(!email){return true}\n        const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n        const sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n        const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n        const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n        const sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n        const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n        const sDomain_ref = sAtom;\n        const sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n        const sWord = '(' + sAtom + '|' + sQuotedString + ')';\n        const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n        const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n        const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n        const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n        const reValidEmail = new RegExp(sValidEmail);\n        return reValidEmail.test(email);\n    }\n\n    return (\n        <Fragment>\n            <Card className=\"shadow mt-4 medium-card bg-light border-0 text-dark\">\n                <CardHeader className=\"bg-primary text-white\">Register</CardHeader>\n                <CardBody>\n                    <Form onSubmit={(e) => onSubmit(e)}>\n                        <FormGroup>\n                            <Label for=\"firstName\">First name:</Label>\n                            <Input type=\"text\" onChange={handleFirstName} name=\"firstName\" placeholder=\"eg. John\" required></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"lastName\">Last name:</Label>\n                            <Input type=\"text\" onChange={handleLastName} name=\"lastName\" placeholder=\"eg. Doe\" required></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input type=\"email\" invalid={!isEmailValid()} onChange={handleEmail} name=\"email\" placeholder=\"eg. john.doe@example.com\" required></Input>\n                            <FormFeedback>{formErrors.email}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input type=\"password\" invalid={!isPasswordValid()} onChange={handlePassword} name=\"password\" placeholder=\"Password\" required></Input>\n                            <FormFeedback>{formErrors.password}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"confirmPassword\">Confirm Password:</Label>\n                            <Input type=\"password\" invalid={!isPasswordValid()} onChange={handleConfirmPassword} name=\"confirmPassword\" placeholder=\"Password\" required></Input>\n                            <FormFeedback>{formErrors.confirmPassword}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"contact\">Contact No:</Label>\n                            <Input type=\"text\" onChange={handleContact} name=\"contact\" placeholder=\"Contact no\" required></Input>\n                        </FormGroup>\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <Button block color=\"secondary\" type=\"submit\">Register</Button>\n                            <a href=\"/login\" className=\"mt-2 small text-decoration-none\">Already have an account?</a>\n                        </div>\n                    </Form>\n                </CardBody>\n            </Card>\n        </Fragment>\n    )\n}","import React from 'react';\nimport { Container } from 'reactstrap';\nimport { Register } from '../components/auth/RegisterEmployee';\n\nimport '../assets/styles/auth/register.scss';\n\ninterface IRegisterProps {\n}\n\nexport const RegisterEmployee = (props: IRegisterProps) => {\n    document.title = 'Access Activation App - Register'\n    return (\n        <Container className=\"register-container\">\n            <Register></Register>\n        </Container>\n    )\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst privateRoute = ({component: Component, accessToken, ...rest}: any) => (\n  <Route {...rest}\n    render={\n      props => accessToken ? (\n        <Component {...props}></Component>\n      ): <Redirect to={{\n        pathname: '/unauthorized',\n        state: { from: props.location }\n      }}/>\n    }\n  ></Route>\n)\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(privateRoute);","import React from 'react';\nimport {\n  Container,\n  Jumbotron,\n  Button\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction goBack(){\n  window.history.back();\n}\n\ninterface IUnauthorizedPros{}\n\nconst unauthorized = function(props: IUnauthorizedPros) {\n  document.title = 'Access Activation App - unauthorized'\n  return (\n    <Container className=\"text-center mt-2\">\n    <Jumbotron className=\"bg-light text-dark shadow\">\n      <FontAwesomeIcon color=\"#dd2c00\" size=\"3x\" icon=\"exclamation-triangle\"></FontAwesomeIcon>\n      <h2>Sorry you are not authorized to view this page.</h2>\n      <Button outline color=\"dark\" size=\"lg\" onClick={() => goBack()} className=\"mt-1\">Go back</Button>\n    </Jumbotron>  \n    </Container>\n  );\n}\n\nexport default unauthorized;","import React from 'react';\nimport { IUserInfo } from '../interfaces';\nimport { Container, Card, CardBody, CardHeader } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport  {QRCode} from 'react-qr-svg';\n\ninterface IUserProfileProps {\n    user?: any;\n}\n\nfunction UserProfile(props: IUserProfileProps) {\n    document.title = 'Access Activation App - Profile'\n    return (\n        <section className=\"user-profile\">\n            <Container className=\"mt-4 login-container\">\n                <Card className=\"bg-light medium-card text-center shadow border-0\">\n                    <CardHeader className=\"bg-secondary text-white\">\n                        <h4 className=\"mb-0\">Employee ID: {props.user.id}</h4>\n                    </CardHeader>\n                    <CardBody>\n                        <h2>{props.user.firstName} {props.user.lastName}</h2>\n                        <QRCode className=\"mt-4\" bgColor=\"#FFFFFF\"\n                            fgColor=\"#000000\"\n                            level=\"Q\"\n                            style={{ width: 256 }}\n                            value={JSON.stringify({firstName: props.user.firstName, lastName: props.user.lastName})} />\n                        <h3 className=\"mt-4\">\n                            {props.user.email}\n                        </h3>\n                        <h3 className=\"mt-4\">\n                       {props.user.contactNo}\n                        </h3>\n                        <small className=\"muted\">This is not your id card. Go to dashboard.</small>\n                    </CardBody>\n                </Card>\n            </Container>\n        </section>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer.user\n})\n\nexport default connect(mapStateToProps)(UserProfile);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Card, CardBody, CardHeader, Container} from \"reactstrap\";\nimport QrReader from 'react-qr-reader';\nimport {validateId, validateVisitorId} from \"../../services/validate.service\";\nimport swal from \"sweetalert\";\n\n\nclass ValidateID extends React.Component<any, any> {\n\n    handleScan = (data: any) => {\n        if (data) {\n            const id = JSON.parse(data);\n            switch (id.type) {\n                case 'employee': {\n                    validateId(id.uuid, this.props.user.accessToken).then((res: any) => {\n                        swal({\n                            title: 'Success',\n                            icon: 'success',\n                            text: 'Employee ID is valid',\n                            timer: 3000\n                        })\n                    }).catch((err: any) => {\n                        swal({\n                            title: 'Error',\n                            icon: 'error',\n                            text: err.response.data.error,\n                            timer: 3000\n                        })\n                    })\n                    break;\n                }\n                case 'visitor': {\n                    validateVisitorId(id.uuid, this.props.user.accessToken).then((res: any) => {\n                        swal({\n                            title: 'Success',\n                            icon: 'success',\n                            text: 'Employee ID is valid',\n                            timer: 3000\n                        })\n                    }).catch((err: any) => {\n                        swal({\n                            title: 'Error',\n                            icon: 'error',\n                            text: err.response.data.error,\n                            timer: 3000\n                        })\n                    })\n                    break;\n                }\n                default: {\n                    swal({\n                        title: 'Error',\n                        icon: 'error',\n                        text: 'Not a valid ID',\n                        timer: 3000\n                    })\n                }\n            }\n        }\n    }\n    handleError = (err: any) => {\n        console.error(err)\n    }\n\n\n    render() {\n        return (\n            <section className=\"user-profile\">\n                <Container className=\"mt-4 login-container\">\n                    <Card className=\"bg-light medium-card text-center shadow border-0\">\n                        <CardHeader className=\"bg-primary text-light\">Validate Card</CardHeader>\n                        <CardBody>\n                            <QrReader\n                                delay={300}\n                                onError={this.handleError}\n                                onScan={this.handleScan}\n                                style={{width: '100%'}}\n                            />\n                        </CardBody>\n                    </Card>\n                </Container>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(ValidateID);\n","import {ajax} from './index';\n\nexport function validateId(uuid: string, token: string){\n//validateemployee\n    return ajax.post('/validateemployee', {\n        uuid\n    }, {\n        headers: {\n            'authorization': token\n        }\n    });\n\n}\nexport function validateVisitorId(uuid: string, token: string){\n//validatepass\n    return ajax.post('/validatepass', {\n        uuid\n    }, {\n        headers: {\n            'authorization': token\n        }\n    });\n}\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from './store/actions/UserActions';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUserCircle, faChevronCircleRight, faSync } from '@fortawesome/free-solid-svg-icons';\n// Routes\n\nimport Home from './views/Home';\nimport Dashboard from './views/Dashboard';\nimport { AppLogin } from './views/Login';\n// Components\n\nimport Navbar from './components/common/Navbar';\nimport { Footer } from './components/common/Footer';\nimport { RegisterEmployee } from './views/Register';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport unauthorized from './views/Unauthorized';\nimport UserProfile from './views/UserProfile';\nimport ValidateID from \"./components/auth/ValidateID\";\n\n\n// Icons\nlibrary.add(\n  faUserCircle,\n  faChevronCircleRight,\n    faSync\n)\n\ninterface IAppProps{\n  loginUser?: any;\n  auth?: any;\n  UserReducers?: any;\n}\n\ninterface IAppState{}\n\nclass App extends Component<IAppProps, IAppState> {\n\n  constructor(props: IAppProps) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Navbar />\n        <Router>\n          <Fragment>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/unauthorized\" exact component={unauthorized} />\n            <Route path=\"/login\" exact component={AppLogin} />\n            <Route path=\"/register\" exact component={RegisterEmployee} />\n            <PrivateRoute path=\"/dashboard\" accessToken={this.props.auth.accessToken} exact component={Dashboard}/>\n            <PrivateRoute path=\"/profile\" accessToken={this.props.auth.accessToken} exact component={UserProfile}/>\n            <PrivateRoute path=\"/validate\" accessToken={this.props.auth.accessToken} exact component={ValidateID}/>\n          </Fragment>\n        </Router>\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    ...state,\n    auth: state.UserReducer\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN_USER, LOGOUT_USER} from '../actions/ActionTypes';\n\nconst INITIAL_STATE = {\n    accessToken: '',\n    user: {}\n}\n\nexport default function(state = INITIAL_STATE, action: any) {\n    switch(action.type) {\n        case LOGIN_USER.type: {\n            const {user, accessToken} = action.payload;\n            return {\n                ...state,\n                accessToken,\n                user\n            };\n        }\n        case LOGOUT_USER.type: {\n            const {user, accessToken} = action.payload;\n            window.location.href = '/';\n            return {\n                ...state,\n                accessToken,\n                user\n            }\n        }\n        default: \n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport UserReducer from './UserReducer';\n\n\nexport default combineReducers({\n    UserReducer\n})","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist';\nimport * as LocalForage from 'localforage';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n    key: 'root',\n    storage: LocalForage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default() => {\n    let store = createStore(\n        persistedReducer,\n        applyMiddleware(\n            thunk\n        )\n    )\n    let persistor = persistStore(store)\n    return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/styles/_fonts.scss';\nimport './assets/styles/_variables.scss';\nimport { Provider } from 'react-redux';\nimport ConfigureStore from './store/ConfigureStore';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { persistor, store } = ConfigureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/Easy.fc7bc2fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Secure.95f4975c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross-palatform.8521eb5f.svg\";"],"sourceRoot":""}