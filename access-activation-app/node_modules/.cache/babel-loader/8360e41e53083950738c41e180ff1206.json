{"ast":null,"code":"import _objectSpread from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/dashboard/GenerateVIsitorForm.tsx\";\nimport React, { useState } from 'react';\nimport { Button, Form, FormFeedback, FormGroup, Input, Label } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { generateVisitorId } from \"../../services/access.service\";\nimport swal from 'sweetalert';\n\nfunction GenerateVisitorIDForm(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visitorEmail = _useState6[0],\n      setVisitorEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      contactNo = _useState8[0],\n      setContactNo = _useState8[1];\n\n  var _useState9 = useState({\n    email: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      formErrors = _useState10[0],\n      setFormErrors = _useState10[1];\n\n  function handleFirstNameChange(e) {\n    e.preventDefault();\n    setFirstName(e.target.value);\n  }\n\n  function handleLastNameChange(e) {\n    e.preventDefault();\n    setLastName(e.target.value);\n  }\n\n  function handleEmailChange(e) {\n    e.preventDefault();\n    setVisitorEmail(e.target.value);\n    isValidEmail() ? setFormErrors({\n      email: 'valid'\n    }) : setFormErrors({\n      email: 'Invalid email address'\n    });\n  }\n\n  function handleContactChange(e) {\n    e.preventDefault();\n    setContactNo(e.target.value);\n  }\n\n  function isValidEmail() {\n    if (!visitorEmail) {\n      return true;\n    }\n\n    var sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n    var sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n    var sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n    var sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n    var sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n    var sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n    var sDomain_ref = sAtom;\n    var sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n    var sWord = '(' + sAtom + '|' + sQuotedString + ')';\n    var sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n    var sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n    var sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n\n    var sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n\n    var reValidEmail = new RegExp(sValidEmail);\n    var isValid = reValidEmail.test(visitorEmail);\n    return isValid;\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n\n    if (isValidEmail()) {\n      generateVisitorId(props.user.user.id, props.user.user.email, firstName, lastName, contactNo, visitorEmail, props.user.accessToken).then(function (res) {\n        console.log(res);\n        swal({\n          title: 'Success',\n          text: 'ID generated successfully.',\n          icon: 'success',\n          timer: 3000\n        });\n      }).catch(function (err) {\n        swal({\n          title: 'Error',\n          text: err.response.data.error,\n          icon: 'error',\n          timer: 3000\n        });\n      });\n    }\n  }\n\n  return React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"First name of visitor:\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"firstName\",\n    onChange: handleFirstNameChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Last name of visitor:\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"lastName\",\n    onChange: handleLastNameChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Email of visitor:\"), React.createElement(Input, {\n    type: \"text\",\n    invalid: !isValidEmail(),\n    id: \"email\",\n    onChange: handleEmailChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, formErrors.email)), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Contact no. of visitor:\"), React.createElement(Input, {\n    type: \"text\",\n    id: \"contact\",\n    onChange: handleContactChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    color: \"outline-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Generate ID Card\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state, {\n    user: state.UserReducer\n  });\n};\n\nexport default connect(mapStateToProps)(GenerateVisitorIDForm);","map":{"version":3,"sources":["/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/dashboard/GenerateVIsitorForm.tsx"],"names":["React","useState","Button","Form","FormFeedback","FormGroup","Input","Label","connect","generateVisitorId","swal","GenerateVisitorIDForm","props","firstName","setFirstName","lastName","setLastName","visitorEmail","setVisitorEmail","contactNo","setContactNo","email","formErrors","setFormErrors","handleFirstNameChange","e","preventDefault","target","value","handleLastNameChange","handleEmailChange","isValidEmail","handleContactChange","sQtext","sDtext","sAtom","sQuotedPair","sDomainLiteral","sQuotedString","sDomain_ref","sSubDomain","sWord","sDomain","sLocalPart","sAddrSpec","sValidEmail","reValidEmail","RegExp","isValid","test","handleFormSubmit","user","id","accessToken","then","res","console","log","title","text","icon","timer","catch","err","response","data","error","mapStateToProps","state","UserReducer"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Form, FormFeedback, FormGroup, Input, Label} from 'reactstrap';\nimport {connect} from \"react-redux\";\nimport {generateVisitorId} from \"../../services/access.service\";\nimport swal from 'sweetalert';\n\nfunction GenerateVisitorIDForm(props: any) {\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [visitorEmail, setVisitorEmail] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [formErrors, setFormErrors] = useState({\n        email: ''\n    })\n\n    function handleFirstNameChange(e: any) {\n        e.preventDefault();\n        setFirstName(e.target.value);\n    }\n\n    function handleLastNameChange(e: any) {\n        e.preventDefault();\n        setLastName(e.target.value);\n    }\n\n    function handleEmailChange(e: any) {\n        e.preventDefault();\n        setVisitorEmail(e.target.value);\n        isValidEmail() ? setFormErrors({\n            email: 'valid',\n        }) : setFormErrors({\n            email: 'Invalid email address',\n        })\n    }\n\n    function handleContactChange(e: any) {\n        e.preventDefault();\n        setContactNo(e.target.value);\n    }\n\n    function isValidEmail(): boolean {\n        if(!visitorEmail){return true}\n        const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n        const sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n        const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n        const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n        const sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n        const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n        const sDomain_ref = sAtom;\n        const sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n        const sWord = '(' + sAtom + '|' + sQuotedString + ')';\n        const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n        const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n        const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n        const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n        const reValidEmail = new RegExp(sValidEmail);\n\n        const isValid = reValidEmail.test(visitorEmail);\n        return isValid;\n    }\n\n    function handleFormSubmit(e: any) {\n        e.preventDefault();\n        if(isValidEmail()){\n            generateVisitorId(props.user.user.id, props.user.user.email,\n                firstName, lastName,\n                contactNo, visitorEmail, props.user.accessToken).then(res => {\n                    console.log(res);\n                    swal({\n                        title: 'Success',\n                        text: 'ID generated successfully.',\n                        icon: 'success',\n                        timer: 3000\n                    })\n            }).catch(err => {\n                swal({\n                    title: 'Error',\n                    text: err.response.data.error,\n                    icon: 'error',\n                    timer: 3000\n                })\n            })\n        }\n    }\n\n    return (\n        <Form onSubmit={handleFormSubmit}>\n            <FormGroup>\n                <Label for=\"firstName\">\n                    First name of visitor:\n                </Label>\n                <Input type=\"text\" id=\"firstName\" onChange={handleFirstNameChange} required/>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"lastName\">\n                    Last name of visitor:\n                </Label>\n                <Input type=\"text\" id=\"lastName\" onChange={handleLastNameChange} required/>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"email\">\n                    Email of visitor:\n                </Label>\n                <Input type=\"text\" invalid={!isValidEmail()} id=\"email\" onChange={handleEmailChange} required/>\n                <FormFeedback>{formErrors.email}</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"contact\">\n                    Contact no. of visitor:\n                </Label>\n                <Input type=\"text\" id=\"contact\" onChange={handleContactChange} required/>\n            </FormGroup>\n            <div className=\"text-center\">\n                <Button type=\"submit\" color=\"outline-primary\">Generate ID Card</Button>\n            </div>\n        </Form>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(GenerateVisitorIDForm);\n\n"]},"metadata":{},"sourceType":"module"}