{"ast":null,"code":"import _objectSpread from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/dashboard/GenerateId.tsx\";\nimport React, { Fragment, useState } from 'react';\nimport { Button, ButtonGroup, CardBody, CardHeader, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { generateId } from \"../../services/access.service\";\nimport swal from \"sweetalert\";\nimport GenerateVisitorIDForm from \"./GenerateVIsitorForm\";\n\nfunction GenerateId(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  function generateNewID(e) {\n    e.preventDefault();\n\n    if (props.user && props.user.user.id) {\n      generateId(props.user.user.id, props.user.user.email, props.user.accessToken).then(function (res) {\n        swal({\n          title: \"Success\",\n          text: \"ID generated successfully.\",\n          icon: \"success\",\n          timer: 3000\n        });\n      }).catch(function (err) {\n        console.log(err);\n        swal({\n          title: \"Failed\",\n          text: err.response.data.error,\n          icon: \"error\",\n          timer: 3000\n        });\n      });\n    }\n  }\n\n  function toggleModal() {\n    setModal(!modal);\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"bg-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Generate New ID\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick(e) {\n      return generateNewID(e);\n    },\n    outline: true,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Generate New ID\"), React.createElement(Button, {\n    outline: true,\n    onClick: toggleModal,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Generate New Visitor ID\"))), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Generate Visitor ID\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(GenerateVisitorIDForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state, {\n    user: state.UserReducer\n  });\n};\n\nexport default connect(mapStateToProps)(GenerateId);","map":{"version":3,"sources":["/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/dashboard/GenerateId.tsx"],"names":["React","Fragment","useState","Button","ButtonGroup","CardBody","CardHeader","Modal","ModalBody","ModalHeader","connect","generateId","swal","GenerateVisitorIDForm","GenerateId","props","modal","setModal","generateNewID","e","preventDefault","user","id","email","accessToken","then","res","title","text","icon","timer","catch","err","console","log","response","data","error","toggleModal","mapStateToProps","state","UserReducer"],"mappings":"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","sourcesContent":["import React, {Component, Fragment, useRef, useState} from 'react';\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    CardBody,\n    CardHeader,\n    Modal,\n    ModalBody,\n    ModalHeader\n} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {generateId} from \"../../services/access.service\";\nimport {IUserInfo} from \"../../interfaces\";\nimport swal from \"sweetalert\";\nimport GenerateVisitorIDForm from \"./GenerateVIsitorForm\";\n\ninterface IGenerateIdProps {\n    user?: IUserInfo;\n}\n\n\nfunction GenerateId(props: IGenerateIdProps) {\n\n    const [modal, setModal] = useState(false);\n\n    function generateNewID(e: any) {\n        e.preventDefault();\n        if(props.user && props.user.user.id) {\n            generateId(props.user.user.id, props.user.user.email, props.user.accessToken).then(\n                res => {\n                    swal({\n                        title: \"Success\",\n                        text: \"ID generated successfully.\",\n                        icon: \"success\",\n                        timer: 3000\n                    })\n                }\n            ).catch(err => {\n                console.log(err);\n                swal({\n                    title: \"Failed\",\n                    text: err.response.data.error,\n                    icon: \"error\",\n                    timer: 3000\n                })\n            })\n\n        }\n    }\n\n    function toggleModal() {\n        setModal(!modal);\n    }\n\n    return(\n        <Fragment>\n            <CardHeader className=\"bg-primary\">\n                Generate New ID\n            </CardHeader>\n            <CardBody>\n                <ButtonGroup>\n                    <Button onClick={(e) => generateNewID(e)} outline color=\"primary\">Generate New ID</Button>\n                    <Button outline onClick={toggleModal} color=\"secondary\">Generate New Visitor ID</Button>\n                </ButtonGroup>\n            </CardBody>\n            <Modal isOpen={modal} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Generate Visitor ID</ModalHeader>\n                <ModalBody>\n                    <GenerateVisitorIDForm/>\n                </ModalBody>\n            </Modal>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(GenerateId);\n"]},"metadata":{},"sourceType":"module"}