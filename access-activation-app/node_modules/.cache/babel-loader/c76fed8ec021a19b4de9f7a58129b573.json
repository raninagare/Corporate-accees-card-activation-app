{"ast":null,"code":"import _objectSpread from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/auth/LoginComponent.tsx\";\nimport React, { useState, Fragment } from 'react';\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label, Button, Input, FormFeedback, Alert } from 'reactstrap';\nimport { loginEmployee } from '../../services';\nimport { connect } from 'react-redux';\nimport { loginUser as _loginUser } from '../../store/actions/UserActions';\n\nfunction LoginComponent(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState({\n    alert: '',\n    email: '',\n    password: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formErrors = _useState6[0],\n      setFormErrors = _useState6[1];\n\n  function handleEmailChange(e) {\n    e.preventDefault();\n    setEmail(e.target.value);\n    isValidEmail() ? setFormErrors({\n      email: 'valid',\n      password: formErrors.password,\n      alert: formErrors.alert\n    }) : setFormErrors({\n      email: 'Invalid email address',\n      password: formErrors.password,\n      alert: formErrors.alert\n    });\n  }\n\n  function handlePasswordChange(e) {\n    e.preventDefault();\n    setPassword(e.target.value);\n    isValidPassword() ? setFormErrors({\n      email: formErrors.email,\n      password: 'valid',\n      alert: formErrors.alert\n    }) : setFormErrors({\n      email: formErrors.email,\n      password: 'Invalid Password',\n      alert: formErrors.alert\n    });\n  }\n\n  function isValidEmail() {\n    if (!email) {\n      return true;\n    }\n\n    var sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n    var sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n    var sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n    var sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n    var sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n    var sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n    var sDomain_ref = sAtom;\n    var sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n    var sWord = '(' + sAtom + '|' + sQuotedString + ')';\n    var sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n    var sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n    var sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n\n    var sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n\n    var reValidEmail = new RegExp(sValidEmail);\n    var isValid = reValidEmail.test(email);\n    return isValid;\n  }\n\n  function isValidPassword() {\n    if (!password) {\n      return true;\n    }\n\n    return password.length > 3;\n  }\n\n  function _onSubmit(e) {\n    e.preventDefault();\n\n    if (isValidEmail() && isValidPassword()) {\n      loginEmployee(email, password).then(function (res) {\n        props.loginUser({\n          user: res.data.employee,\n          accessToken: res.data.token\n        });\n        window.location.href = '/dashboard';\n      }).catch(function (err) {\n        console.log(err);\n        setFormErrors({\n          alert: err.response.data.error,\n          email: formErrors.email,\n          password: formErrors.password\n        });\n      });\n    }\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"shadow mt-4 medium-card bg-light border-0 text-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"bg-primary text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, formErrors.alert ? React.createElement(Alert, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, formErrors.alert) : null, React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      return _onSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(Input, {\n    name: \"email\",\n    invalid: !isValidEmail(),\n    onChange: handleEmailChange,\n    placeholder: \"eg. john.doe@example.com\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, formErrors.email)), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    invalid: !isValidPassword(),\n    onChange: handlePasswordChange,\n    placeholder: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, formErrors.password)), React.createElement(\"div\", {\n    className: \"d-flex flex-column justify-content-center align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"a\", {\n    className: \"small mt-2 text-decoration-none\",\n    href: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Don't have an account?\"))))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state, {\n    user: state.UserReducer\n  });\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser(payload) {\n      return dispatch(_loginUser(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);","map":{"version":3,"sources":["/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/auth/LoginComponent.tsx"],"names":["React","useState","Fragment","Card","CardHeader","CardBody","Form","FormGroup","Label","Button","Input","FormFeedback","Alert","loginEmployee","connect","loginUser","LoginComponent","props","email","setEmail","password","setPassword","alert","formErrors","setFormErrors","handleEmailChange","e","preventDefault","target","value","isValidEmail","handlePasswordChange","isValidPassword","sQtext","sDtext","sAtom","sQuotedPair","sDomainLiteral","sQuotedString","sDomain_ref","sSubDomain","sWord","sDomain","sLocalPart","sAddrSpec","sValidEmail","reValidEmail","RegExp","isValid","test","length","onSubmit","then","res","user","data","employee","accessToken","token","window","location","href","catch","err","console","log","response","error","mapStateToProps","state","UserReducer","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label, Button, Input, FormFeedback, Alert } from 'reactstrap';\nimport { loginEmployee } from '../../services';\nimport { connect } from 'react-redux';\nimport { IUserInfo } from '../../interfaces';\nimport { loginUser } from '../../store/actions/UserActions';\nimport { Action } from 'redux';\n\ninterface ILoginComponentProps {\n    loginUser?: any;\n    dispatch?: any;\n}\n\nfunction LoginComponent(props: ILoginComponentProps) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [formErrors, setFormErrors] = useState({\n        alert: '',\n        email: '',\n        password: ''\n    })\n\n    function handleEmailChange(e: any) {\n        e.preventDefault();\n        setEmail(e.target.value);\n        isValidEmail() ? setFormErrors({\n            email: 'valid',\n            password: formErrors.password,\n            alert: formErrors.alert\n        }) : setFormErrors({\n            email: 'Invalid email address',\n            password: formErrors.password,\n            alert: formErrors.alert\n        })\n\n    }\n\n    function handlePasswordChange(e: any) {\n        e.preventDefault();\n        setPassword(e.target.value);\n        isValidPassword() ? setFormErrors({\n            email: formErrors.email,\n            password: 'valid',\n            alert: formErrors.alert\n        }): setFormErrors({\n            email: formErrors.email,\n            password: 'Invalid Password',\n            alert: formErrors.alert\n        })\n    }\n\n    function isValidEmail(): boolean {\n        if(!email){return true}\n        const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n        const sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n        const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n        const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n        const sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n        const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n        const sDomain_ref = sAtom;\n        const sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n        const sWord = '(' + sAtom + '|' + sQuotedString + ')';\n        const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n        const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n        const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n        const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n        const reValidEmail = new RegExp(sValidEmail);\n        \n        const isValid = reValidEmail.test(email);\n        return isValid;\n    }\n\n    function isValidPassword(): boolean {\n        if(!password){return true}\n        return password.length > 3;\n    }\n\n    function onSubmit(e: any) {\n        e.preventDefault();\n        if(isValidEmail() && isValidPassword()) {\n            loginEmployee(email, password).then(res => {\n                props.loginUser({\n                        user: res.data.employee,\n                        accessToken: res.data.token\n                })\n                window.location.href = '/dashboard';\n            }).catch(err => {\n                console.log(err);\n                setFormErrors({\n                    alert: err.response.data.error,\n                    email: formErrors.email,\n                    password: formErrors.password\n                })\n            })\n        }\n    }\n\n    return(\n        <Fragment>\n            <Card className=\"shadow mt-4 medium-card bg-light border-0 text-dark\">\n                <CardHeader className=\"bg-primary text-white\">Sign In</CardHeader>\n                <CardBody>\n                    {(formErrors.alert) ? (<Alert color=\"danger\">{formErrors.alert}</Alert>) : null}\n                    <Form onSubmit={(e) => onSubmit(e)}>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input name=\"email\" invalid={!isValidEmail()} onChange={handleEmailChange} placeholder=\"eg. john.doe@example.com\" required></Input>\n                            <FormFeedback>{formErrors.email}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input name=\"password\" type=\"password\" invalid={!isValidPassword()} onChange={handlePasswordChange} placeholder=\"Password\" required></Input>\n                            <FormFeedback>{formErrors.password}</FormFeedback>\n                        </FormGroup>\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <Button block>Sign in</Button>\n                            <a className=\"small mt-2 text-decoration-none\" href=\"/register\" >Don't have an account?</a>\n                        </div>\n                    </Form>\n                </CardBody>\n            </Card>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n  })\n\nconst mapDispatchToProps = (dispatch: React.Dispatch<Action>) => ({\n        loginUser: (payload: IUserInfo) => dispatch(loginUser(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\n"]},"metadata":{},"sourceType":"module"}