{"ast":null,"code":"import _objectSpread from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/auth/ValidateID.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Card, CardBody, CardHeader, Container } from \"reactstrap\";\nimport QrReader from 'react-qr-reader';\nimport { validateId, validateVisitorId } from \"../../services/validate.service\";\nimport swal from \"sweetalert\";\n\nvar ValidateID =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ValidateID, _React$Component);\n\n  function ValidateID() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ValidateID);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ValidateID)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleScan = function (data) {\n      if (data) {\n        var id = JSON.parse(data);\n\n        switch (id.type) {\n          case 'employee':\n            {\n              validateId(id.uuid, _this.props.user.accessToken).then(function (res) {\n                swal({\n                  title: 'Success',\n                  icon: 'success',\n                  text: 'Employee ID is valid',\n                  timer: 3000\n                });\n              }).catch(function (err) {\n                swal({\n                  title: 'Error',\n                  icon: 'error',\n                  text: err.response.data.error,\n                  timer: 3000\n                });\n              });\n              break;\n            }\n\n          case 'visitor':\n            {\n              validateVisitorId(id.uuid, _this.props.user.accessToken).then(function (res) {\n                swal({\n                  title: 'Success',\n                  icon: 'success',\n                  text: 'Employee ID is valid',\n                  timer: 3000\n                });\n              }).catch(function (err) {\n                console.log(err);\n              });\n              break;\n            }\n\n          default:\n            {\n              swal({\n                title: 'Error',\n                icon: 'error',\n                text: 'Not a valid ID',\n                timer: 3000\n              });\n            }\n        }\n      }\n    };\n\n    _this.handleError = function (err) {\n      console.error(err);\n    };\n\n    return _this;\n  }\n\n  _createClass(ValidateID, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        className: \"user-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"mt-4 login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"bg-light medium-card text-center shadow border-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"bg-primary text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Validate Card\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(QrReader, {\n        delay: 300,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ValidateID;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state, {\n    user: state.UserReducer\n  });\n};\n\nexport default connect(mapStateToProps)(ValidateID);","map":{"version":3,"sources":["/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/auth/ValidateID.tsx"],"names":["React","connect","Card","CardBody","CardHeader","Container","QrReader","validateId","validateVisitorId","swal","ValidateID","handleScan","data","id","JSON","parse","type","uuid","props","user","accessToken","then","res","title","icon","text","timer","catch","err","response","error","console","log","handleError","width","Component","mapStateToProps","state","UserReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Card, CardBody, CardHeader, Container} from \"reactstrap\";\nimport QrReader from 'react-qr-reader';\nimport {validateId, validateVisitorId} from \"../../services/validate.service\";\nimport swal from \"sweetalert\";\n\n\nclass ValidateID extends React.Component<any, any> {\n\n    handleScan = (data: any) => {\n        if (data) {\n            const id = JSON.parse(data);\n            switch (id.type) {\n                case 'employee': {\n                    validateId(id.uuid, this.props.user.accessToken).then((res: any) => {\n                        swal({\n                            title: 'Success',\n                            icon: 'success',\n                            text: 'Employee ID is valid',\n                            timer: 3000\n                        })\n                    }).catch((err: any) => {\n                        swal({\n                            title: 'Error',\n                            icon: 'error',\n                            text: err.response.data.error,\n                            timer: 3000\n                        })\n                    })\n                    break;\n                }\n                case 'visitor': {\n                    validateVisitorId(id.uuid, this.props.user.accessToken).then((res: any) => {\n                        swal({\n                            title: 'Success',\n                            icon: 'success',\n                            text: 'Employee ID is valid',\n                            timer: 3000\n                        })\n                    }).catch((err: any) => {\n                       console.log(err)\n                    })\n                    break;\n                }\n                default: {\n                    swal({\n                        title: 'Error',\n                        icon: 'error',\n                        text: 'Not a valid ID',\n                        timer: 3000\n                    })\n                }\n            }\n        }\n    }\n    handleError = (err: any) => {\n        console.error(err)\n    }\n\n\n    render() {\n        return (\n            <section className=\"user-profile\">\n                <Container className=\"mt-4 login-container\">\n                    <Card className=\"bg-light medium-card text-center shadow border-0\">\n                        <CardHeader className=\"bg-primary text-light\">Validate Card</CardHeader>\n                        <CardBody>\n                            <QrReader\n                                delay={300}\n                                onError={this.handleError}\n                                onScan={this.handleScan}\n                                style={{width: '100%'}}\n                            />\n                        </CardBody>\n                    </Card>\n                </Container>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(ValidateID);\n"]},"metadata":{},"sourceType":"module"}