{"ast":null,"code":"import _slicedToArray from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/auth/RegisterEmployee.tsx\";\nimport React, { Fragment, useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Label, Input, Button, CardHeader, FormFeedback } from 'reactstrap';\nimport '../../assets/styles/auth/register.scss';\nimport { registerEmployee } from '../../services/auth.service';\nexport var Register = function Register(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmPassword = _useState10[0],\n      setConfirmPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      contactNo = _useState12[0],\n      setContactNo = _useState12[1];\n\n  var _useState13 = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      formErrors = _useState14[0],\n      setFormErrors = _useState14[1];\n\n  function handleFirstName(e) {\n    setFirstName(e.target.value);\n  }\n\n  function handleLastName(e) {\n    setLastName(e.target.value);\n  }\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n    isEmailValid() ? setFormErrors({\n      email: '',\n      password: formErrors.password,\n      confirmPassword: formErrors.confirmPassword\n    }) : setFormErrors({\n      email: 'Entered email is invalid',\n      password: formErrors.password,\n      confirmPassword: formErrors.confirmPassword\n    });\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleConfirmPassword(e) {\n    setConfirmPassword(e.target.value);\n    isPasswordValid() ? setFormErrors({\n      email: formErrors.email,\n      password: '',\n      confirmPassword: 'Passwords match'\n    }) : setFormErrors({\n      email: formErrors.email,\n      password: 'Passwords do not match',\n      confirmPassword: 'Passwords do not match'\n    });\n  }\n\n  function handleContact(e) {\n    setContactNo(e.target.value);\n  }\n\n  function isFormValid() {\n    return isEmailValid() && isPasswordValid();\n  }\n\n  function _onSubmit(e) {\n    e.preventDefault();\n    console.log({\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      contactNo: contactNo\n    });\n    registerEmployee({\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      contactNo: contactNo\n    }).then(function (res) {\n      console.log(res);\n      window.location.href = '/login'; //alert('success');\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  function isPasswordValid() {\n    if (!password && !confirmPassword) {\n      return true;\n    }\n\n    return password === confirmPassword && password.length > 3;\n  }\n\n  function isEmailValid() {\n    if (!email) {\n      return true;\n    }\n\n    var sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n    var sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n    var sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n    var sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n    var sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n    var sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n    var sDomain_ref = sAtom;\n    var sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n    var sWord = '(' + sAtom + '|' + sQuotedString + ')';\n    var sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n    var sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n    var sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n\n    var sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n\n    var reValidEmail = new RegExp(sValidEmail);\n    return reValidEmail.test(email);\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"shadow mt-4 medium-card bg-light border-0 text-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"bg-primary text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Register\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      return _onSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"First name:\"), React.createElement(Input, {\n    type: \"text\",\n    onChange: handleFirstName,\n    name: \"firstName\",\n    placeholder: \"eg. John\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Last name:\"), React.createElement(Input, {\n    type: \"text\",\n    onChange: handleLastName,\n    name: \"lastName\",\n    placeholder: \"eg. Doe\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(Input, {\n    type: \"email\",\n    invalid: !isEmailValid(),\n    onChange: handleEmail,\n    name: \"email\",\n    placeholder: \"eg. john.doe@example.com\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, formErrors.email)), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(Input, {\n    type: \"password\",\n    invalid: !isPasswordValid(),\n    onChange: handlePassword,\n    name: \"password\",\n    placeholder: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, formErrors.password)), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Confirm Password:\"), React.createElement(Input, {\n    type: \"password\",\n    invalid: !isPasswordValid(),\n    onChange: handleConfirmPassword,\n    name: \"confirmPassword\",\n    placeholder: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, formErrors.confirmPassword)), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Contact No:\"), React.createElement(Input, {\n    type: \"text\",\n    onChange: handleContact,\n    name: \"contact\",\n    placeholder: \"Contact no\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex flex-column justify-content-center align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    color: \"secondary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"a\", {\n    href: \"/login\",\n    className: \"mt-2 small text-decoration-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Already have an account?\"))))));\n};","map":{"version":3,"sources":["/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/auth/RegisterEmployee.tsx"],"names":["React","Fragment","useState","Card","CardBody","Form","FormGroup","Label","Input","Button","CardHeader","FormFeedback","registerEmployee","Register","props","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","contactNo","setContactNo","formErrors","setFormErrors","handleFirstName","e","target","value","handleLastName","handleEmail","isEmailValid","handlePassword","handleConfirmPassword","isPasswordValid","handleContact","isFormValid","onSubmit","preventDefault","console","log","then","res","window","location","href","catch","err","length","sQtext","sDtext","sAtom","sQuotedPair","sDomainLiteral","sQuotedString","sDomain_ref","sSubDomain","sWord","sDomain","sLocalPart","sAddrSpec","sValidEmail","reValidEmail","RegExp","test"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,KAAjD,EAAwDC,MAAxD,EAA2EC,UAA3E,EAAuFC,YAAvF,QAA2G,YAA3G;AAEA,OAAO,wCAAP;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAA2B;AAAA,kBACbZ,QAAQ,CAAC,EAAD,CADK;AAAA;AAAA,MACxCa,SADwC;AAAA,MAC7BC,YAD6B;;AAAA,mBAEfd,QAAQ,CAAC,EAAD,CAFO;AAAA;AAAA,MAExCe,QAFwC;AAAA,MAE9BC,WAF8B;;AAAA,mBAGrBhB,QAAQ,CAAC,EAAD,CAHa;AAAA;AAAA,MAGxCiB,KAHwC;AAAA,MAGjCC,QAHiC;;AAAA,mBAIflB,QAAQ,CAAC,EAAD,CAJO;AAAA;AAAA,MAIxCmB,QAJwC;AAAA,MAI9BC,WAJ8B;;AAAA,mBAKDpB,QAAQ,CAAC,EAAD,CALP;AAAA;AAAA,MAKxCqB,eALwC;AAAA,MAKvBC,kBALuB;;AAAA,oBAMbtB,QAAQ,CAAC,EAAD,CANK;AAAA;AAAA,MAMxCuB,SANwC;AAAA,MAM7BC,YAN6B;;AAAA,oBAOXxB,QAAQ,CAAC;AACzCiB,IAAAA,KAAK,EAAE,EADkC;AAEzCE,IAAAA,QAAQ,EAAE,EAF+B;AAGzCE,IAAAA,eAAe,EAAE;AAHwB,GAAD,CAPG;AAAA;AAAA,MAOxCI,UAPwC;AAAA,MAO5BC,aAP4B;;AAa/C,WAASC,eAAT,CAAyBC,CAAzB,EAAiC;AAC7Bd,IAAAA,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH;;AACD,WAASC,cAAT,CAAwBH,CAAxB,EAAgC;AAC5BZ,IAAAA,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;;AACD,WAASE,WAAT,CAAqBJ,CAArB,EAA6B;AACzBV,IAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAG,IAAAA,YAAY,KAAKP,aAAa,CAAC;AAC3BT,MAAAA,KAAK,EAAE,EADoB;AAE3BE,MAAAA,QAAQ,EAAEM,UAAU,CAACN,QAFM;AAG3BE,MAAAA,eAAe,EAAEI,UAAU,CAACJ;AAHD,KAAD,CAAlB,GAIPK,aAAa,CAAC;AACfT,MAAAA,KAAK,EAAE,0BADQ;AAEfE,MAAAA,QAAQ,EAAEM,UAAU,CAACN,QAFN;AAGfE,MAAAA,eAAe,EAAEI,UAAU,CAACJ;AAHb,KAAD,CAJlB;AASH;;AACD,WAASa,cAAT,CAAwBN,CAAxB,EAAgC;AAC5BR,IAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;;AACD,WAASK,qBAAT,CAA+BP,CAA/B,EAAuC;AACnCN,IAAAA,kBAAkB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACCM,IAAAA,eAAe,EAAhB,GAAsBV,aAAa,CAAC;AAChCT,MAAAA,KAAK,EAAEQ,UAAU,CAACR,KADc;AAEhCE,MAAAA,QAAQ,EAAE,EAFsB;AAGhCE,MAAAA,eAAe,EAAE;AAHe,KAAD,CAAnC,GAIKK,aAAa,CAAC;AACfT,MAAAA,KAAK,EAAEQ,UAAU,CAACR,KADH;AAEfE,MAAAA,QAAQ,EAAE,wBAFK;AAGfE,MAAAA,eAAe,EAAE;AAHF,KAAD,CAJlB;AASH;;AACD,WAASgB,aAAT,CAAuBT,CAAvB,EAA+B;AAC3BJ,IAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH;;AACD,WAASQ,WAAT,GAAgC;AAC7B,WAAOL,YAAY,MAAMG,eAAe,EAAxC;AACF;;AACD,WAASG,SAAT,CAAkBX,CAAlB,EAA0B;AACtBA,IAAAA,CAAC,CAACY,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AACR7B,MAAAA,SAAS,EAATA,SADQ;AAERE,MAAAA,QAAQ,EAARA,QAFQ;AAGRE,MAAAA,KAAK,EAALA,KAHQ;AAIRE,MAAAA,QAAQ,EAARA,QAJQ;AAKRI,MAAAA,SAAS,EAATA;AALQ,KAAZ;AAOAb,IAAAA,gBAAgB,CAAC;AACbG,MAAAA,SAAS,EAATA,SADa;AAEbE,MAAAA,QAAQ,EAARA,QAFa;AAGbE,MAAAA,KAAK,EAALA,KAHa;AAIbE,MAAAA,QAAQ,EAARA,QAJa;AAKbI,MAAAA,SAAS,EAATA;AALa,KAAD,CAAhB,CAMGoB,IANH,CAMQ,UAAAC,GAAG,EAAI;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,QAArB,CAFW,CAGX;AACH,KAVD,EAUGC,KAVH,CAUS,UAAAC,GAAG,EAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,KAZD;AAaH;;AACD,WAASb,eAAT,GAA2B;AACvB,QAAG,CAACjB,QAAD,IAAa,CAACE,eAAjB,EAAiC;AAAC,aAAO,IAAP;AAAY;;AAC9C,WAAOF,QAAQ,KAAKE,eAAb,IAAgCF,QAAQ,CAAC+B,MAAT,GAAkB,CAAzD;AACH;;AACD,WAASjB,YAAT,GAAwB;AACpB,QAAG,CAAChB,KAAJ,EAAU;AAAC,aAAO,IAAP;AAAY;;AACvB,QAAMkC,MAAM,GAAG,+BAAf;AACA,QAAMC,MAAM,GAAG,gCAAf;AACA,QAAMC,KAAK,GAAG,qFAAd;AACA,QAAMC,WAAW,GAAG,oBAApB;AACA,QAAMC,cAAc,GAAG,WAAWH,MAAX,GAAoB,GAApB,GAA0BE,WAA1B,GAAwC,SAA/D;AACA,QAAME,aAAa,GAAG,WAAWL,MAAX,GAAoB,GAApB,GAA0BG,WAA1B,GAAwC,SAA9D;AACA,QAAMG,WAAW,GAAGJ,KAApB;AACA,QAAMK,UAAU,GAAG,MAAMD,WAAN,GAAoB,GAApB,GAA0BF,cAA1B,GAA2C,GAA9D;AACA,QAAMI,KAAK,GAAG,MAAMN,KAAN,GAAc,GAAd,GAAoBG,aAApB,GAAoC,GAAlD;AACA,QAAMI,OAAO,GAAGF,UAAU,GAAG,QAAb,GAAwBA,UAAxB,GAAqC,IAArD;AACA,QAAMG,UAAU,GAAGF,KAAK,GAAG,QAAR,GAAmBA,KAAnB,GAA2B,IAA9C;AACA,QAAMG,SAAS,GAAGD,UAAU,GAAG,OAAb,GAAuBD,OAAzC,CAboB,CAa8B;;AAClD,QAAMG,WAAW,GAAG,MAAMD,SAAN,GAAkB,GAAtC,CAdoB,CAcuB;;AAC3C,QAAME,YAAY,GAAG,IAAIC,MAAJ,CAAWF,WAAX,CAArB;AACA,WAAOC,YAAY,CAACE,IAAb,CAAkBjD,KAAlB,CAAP;AACH;;AAED,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,qDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,aAAOW,SAAQ,CAACX,CAAD,CAAf;AAAA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAED,eAA7B;AAA8C,IAAA,IAAI,EAAC,WAAnD;AAA+D,IAAA,WAAW,EAAC,UAA3E;AAAsF,IAAA,QAAQ,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEI,cAA7B;AAA6C,IAAA,IAAI,EAAC,UAAlD;AAA6D,IAAA,WAAW,EAAC,SAAzE;AAAmF,IAAA,QAAQ,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,OAAO,EAAE,CAACE,YAAY,EAA1C;AAA8C,IAAA,QAAQ,EAAED,WAAxD;AAAqE,IAAA,IAAI,EAAC,OAA1E;AAAkF,IAAA,WAAW,EAAC,0BAA9F;AAAyH,IAAA,QAAQ,MAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeP,UAAU,CAACR,KAA1B,CAHJ,CATJ,EAcI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAE,CAACmB,eAAe,EAAhD;AAAoD,IAAA,QAAQ,EAAEF,cAA9D;AAA8E,IAAA,IAAI,EAAC,UAAnF;AAA8F,IAAA,WAAW,EAAC,UAA1G;AAAqH,IAAA,QAAQ,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeT,UAAU,CAACN,QAA1B,CAHJ,CAdJ,EAmBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAE,CAACiB,eAAe,EAAhD;AAAoD,IAAA,QAAQ,EAAED,qBAA9D;AAAqF,IAAA,IAAI,EAAC,iBAA1F;AAA4G,IAAA,WAAW,EAAC,UAAxH;AAAmI,IAAA,QAAQ,MAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeV,UAAU,CAACJ,eAA1B,CAHJ,CAnBJ,EAwBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEgB,aAA7B;AAA4C,IAAA,IAAI,EAAC,SAAjD;AAA2D,IAAA,WAAW,EAAC,YAAvE;AAAoF,IAAA,QAAQ,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxBJ,EA4BI;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,WAApB;AAAgC,IAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAG,IAAA,IAAI,EAAC,QAAR;AAAiB,IAAA,SAAS,EAAC,iCAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,CA5BJ,CADJ,CAFJ,CADJ,CADJ;AA0CH,CA5IM","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Card, CardBody, Form, FormGroup, Label, Input, Button, CardTitle, CardHeader, FormFeedback } from 'reactstrap';\n\nimport '../../assets/styles/auth/register.scss';\nimport { registerEmployee } from '../../services/auth.service';\n\ninterface IRegisterProps {\n}\n\n\nexport const Register = (props: IRegisterProps) => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [formErrors, setFormErrors] = useState({\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    function handleFirstName(e: any) {\n        setFirstName(e.target.value);\n    }\n    function handleLastName(e: any) {\n        setLastName(e.target.value);\n    }\n    function handleEmail(e: any) {\n        setEmail(e.target.value);\n        isEmailValid() ? setFormErrors({\n            email: '',\n            password: formErrors.password,\n            confirmPassword: formErrors.confirmPassword\n        }) : setFormErrors({\n            email: 'Entered email is invalid',\n            password: formErrors.password,\n            confirmPassword: formErrors.confirmPassword\n        });\n    }\n    function handlePassword(e: any) {\n        setPassword(e.target.value);\n    }\n    function handleConfirmPassword(e: any) {\n        setConfirmPassword(e.target.value);\n        (isPasswordValid()) ? setFormErrors({\n            email: formErrors.email,\n            password: '',\n            confirmPassword: 'Passwords match'\n        }) : setFormErrors({\n            email: formErrors.email,\n            password: 'Passwords do not match',\n            confirmPassword: 'Passwords do not match'\n        });\n    }\n    function handleContact(e: any) {\n        setContactNo(e.target.value);\n    }\n    function isFormValid(): boolean {\n       return isEmailValid() && isPasswordValid();\n    }\n    function onSubmit(e: any) {\n        e.preventDefault();\n        console.log({\n            firstName,\n            lastName,\n            email,\n            password,\n            contactNo\n        })\n        registerEmployee({\n            firstName,\n            lastName,\n            email,\n            password,\n            contactNo\n        }).then(res => {\n            console.log(res);\n            window.location.href='/login'\n            //alert('success');\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n    function isPasswordValid() {\n        if(!password && !confirmPassword){return true}\n        return password === confirmPassword && password.length > 3;\n    }\n    function isEmailValid() {\n        if(!email){return true}\n        const sQtext = '[^\\\\x0d\\\\x22\\\\x5c\\\\x80-\\\\xff]';\n        const sDtext = '[^\\\\x0d\\\\x5b-\\\\x5d\\\\x80-\\\\xff]';\n        const sAtom = '[^\\\\x00-\\\\x20\\\\x22\\\\x28\\\\x29\\\\x2c\\\\x2e\\\\x3a-\\\\x3c\\\\x3e\\\\x40\\\\x5b-\\\\x5d\\\\x7f-\\\\xff]+';\n        const sQuotedPair = '\\\\x5c[\\\\x00-\\\\x7f]';\n        const sDomainLiteral = '\\\\x5b(' + sDtext + '|' + sQuotedPair + ')*\\\\x5d';\n        const sQuotedString = '\\\\x22(' + sQtext + '|' + sQuotedPair + ')*\\\\x22';\n        const sDomain_ref = sAtom;\n        const sSubDomain = '(' + sDomain_ref + '|' + sDomainLiteral + ')';\n        const sWord = '(' + sAtom + '|' + sQuotedString + ')';\n        const sDomain = sSubDomain + '(\\\\x2e' + sSubDomain + ')*';\n        const sLocalPart = sWord + '(\\\\x2e' + sWord + ')*';\n        const sAddrSpec = sLocalPart + '\\\\x40' + sDomain; // complete RFC822 email address spec\n        const sValidEmail = '^' + sAddrSpec + '$'; // as whole string\n        const reValidEmail = new RegExp(sValidEmail);\n        return reValidEmail.test(email);\n    }\n\n    return (\n        <Fragment>\n            <Card className=\"shadow mt-4 medium-card bg-light border-0 text-dark\">\n                <CardHeader className=\"bg-primary text-white\">Register</CardHeader>\n                <CardBody>\n                    <Form onSubmit={(e) => onSubmit(e)}>\n                        <FormGroup>\n                            <Label for=\"firstName\">First name:</Label>\n                            <Input type=\"text\" onChange={handleFirstName} name=\"firstName\" placeholder=\"eg. John\" required></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"lastName\">Last name:</Label>\n                            <Input type=\"text\" onChange={handleLastName} name=\"lastName\" placeholder=\"eg. Doe\" required></Input>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input type=\"email\" invalid={!isEmailValid()} onChange={handleEmail} name=\"email\" placeholder=\"eg. john.doe@example.com\" required></Input>\n                            <FormFeedback>{formErrors.email}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input type=\"password\" invalid={!isPasswordValid()} onChange={handlePassword} name=\"password\" placeholder=\"Password\" required></Input>\n                            <FormFeedback>{formErrors.password}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"confirmPassword\">Confirm Password:</Label>\n                            <Input type=\"password\" invalid={!isPasswordValid()} onChange={handleConfirmPassword} name=\"confirmPassword\" placeholder=\"Password\" required></Input>\n                            <FormFeedback>{formErrors.confirmPassword}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"contact\">Contact No:</Label>\n                            <Input type=\"text\" onChange={handleContact} name=\"contact\" placeholder=\"Contact no\" required></Input>\n                        </FormGroup>\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <Button block color=\"secondary\" type=\"submit\">Register</Button>\n                            <a href=\"/login\" className=\"mt-2 small text-decoration-none\">Already have an account?</a>\n                        </div>\n                    </Form>\n                </CardBody>\n            </Card>\n        </Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}