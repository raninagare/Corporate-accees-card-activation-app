{"ast":null,"code":"import _objectSpread from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/dashboard/CurrentIdStatus.tsx\";\nimport React from 'react';\nimport { Button, Card, CardBody, CardHeader } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getEmployeeId } from \"../../services/access.service\";\nimport { QRCode } from 'react-qr-svg';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport swal from 'sweetalert';\n\nvar CurrentIdStatus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CurrentIdStatus, _React$Component);\n\n  function CurrentIdStatus(props) {\n    var _this;\n\n    _classCallCheck(this, CurrentIdStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrentIdStatus).call(this, props));\n    _this.state = {\n      uuid: '',\n      activationStartTime: '',\n      activationEndTime: '',\n      idStatus: '',\n      empId: ''\n    };\n    return _this;\n  }\n\n  _createClass(CurrentIdStatus, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getIdCard();\n    }\n  }, {\n    key: \"getIdCard\",\n    value: function getIdCard() {\n      var _this2 = this;\n\n      if (this.props.user && this.props.user.user.id) {\n        getEmployeeId(this.props.user.user.id, this.props.user.accessToken).then(function (res) {\n          console.log(res.data.employee);\n          var id = res.data.employee;\n\n          _this2.setState({\n            uuid: id.uuid,\n            activationEndTime: id.activationEndTime,\n            activationStartTime: id.activationStartTime,\n            idStatus: id.state,\n            empId: id.employeeId\n          });\n        }).catch(function (err) {\n          swal({\n            title: 'Error',\n            icon: 'error',\n            text: err.response.data.error,\n            timer: 3000\n          });\n          console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"convertTime\",\n    value: function convertTime(time) {\n      var date = moment.utc(time).toDate();\n      return moment(date).local().format('YYYY-MM-DD dddd HH:mm:ss A');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Card, {\n        className: \"shadow-sm border-0 medium-card bg-light text-white text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"bg-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Your current ID status: \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.idStatus.toUpperCase()), React.createElement(\"span\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.getIdCard();\n        },\n        size: \"sm\",\n        outline: true,\n        className: \"text-white\",\n        \"aria-label\": \"Refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"sync\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"card-text text-dark my-2 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Employee Id: \", this.state.empId), React.createElement(QRCode, {\n        value: JSON.stringify({\n          uuid: this.state.uuid,\n          type: 'employee',\n          empId: this.state.empId\n        }),\n        className: \"mt-4\",\n        bgColor: \"#FFFFFF\",\n        fgColor: \"#000000\",\n        level: \"Q\",\n        style: {\n          width: 250\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"card-text mt-2 text-dark text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Activation Start Time: \", this.convertTime(this.state.activationStartTime)), React.createElement(\"p\", {\n        className: \"card-text text-dark text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Activation End Time: \", this.convertTime(this.state.activationEndTime))));\n    }\n  }]);\n\n  return CurrentIdStatus;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state, {\n    user: state.UserReducer\n  });\n};\n\nexport default connect(mapStateToProps)(CurrentIdStatus);","map":{"version":3,"sources":["/Users/rani/Documents/projects/Ajinkya-Masters-Demo/MastersProject/access-activation-app/src/components/dashboard/CurrentIdStatus.tsx"],"names":["React","Button","Card","CardBody","CardHeader","connect","getEmployeeId","QRCode","moment","FontAwesomeIcon","swal","CurrentIdStatus","props","state","uuid","activationStartTime","activationEndTime","idStatus","empId","getIdCard","user","id","accessToken","then","res","console","log","data","employee","setState","employeeId","catch","err","title","icon","text","response","error","timer","time","date","utc","toDate","local","format","toUpperCase","JSON","stringify","type","width","convertTime","Component","mapStateToProps","UserReducer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Button, Card, CardBody, CardHeader} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {IUserInfo} from \"../../interfaces\";\nimport {getEmployeeId} from \"../../services/access.service\";\nimport {QRCode} from 'react-qr-svg';\nimport moment from 'moment';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport swal from 'sweetalert';\n\ninterface CurrentIdProps {\n    user?: IUserInfo;\n}\n\ninterface ICurrentIdState {\n    uuid: string;\n    activationStartTime: string;\n    activationEndTime: string;\n    idStatus: string;\n    empId: string | number\n}\n\nclass CurrentIdStatus extends React.Component<CurrentIdProps, ICurrentIdState>{\n\n    constructor(props: CurrentIdProps) {\n        super(props);\n        this.state = {\n            uuid: '',\n            activationStartTime: '',\n            activationEndTime: '',\n            idStatus: '',\n            empId: ''\n        }\n    }\n    componentDidMount(): void {\n        this.getIdCard();\n    }\n\n    getIdCard() {\n        if (this.props.user && this.props.user.user.id) {\n            getEmployeeId(this.props.user.user.id, this.props.user.accessToken).then((res) => {\n                console.log(res.data.employee);\n                const id = res.data.employee;\n                this.setState({\n                    uuid: id.uuid,\n                    activationEndTime: id.activationEndTime,\n                    activationStartTime: id.activationStartTime,\n                    idStatus: id.state,\n                    empId: id.employeeId\n                })\n            }).catch(err => {\n                swal({\n                    title: 'Error',\n                    icon: 'error',\n                    text: err.response.data.error,\n                    timer: 3000\n                })\n                console.log(err);\n            })\n        }\n    }\n\n    convertTime(time: string) {\n        const date = moment.utc(time).toDate();\n        return moment(date).local().format('YYYY-MM-DD dddd HH:mm:ss A');\n    }\n\n    render(){\n    return (\n        <Card className=\"shadow-sm border-0 medium-card bg-light text-white text-center\">\n            <CardHeader className=\"bg-primary\">\n                Your current ID status: <span>{this.state.idStatus.toUpperCase()}</span>\n                <span className=\"float-right\">\n                    <Button onClick={() => this.getIdCard()} size=\"sm\" outline className=\"text-white\" aria-label=\"Refresh\">\n                        <FontAwesomeIcon icon=\"sync\"></FontAwesomeIcon>\n                    </Button>\n                </span>\n            </CardHeader>\n            <CardBody>\n                <p className=\"card-text text-dark my-2 text-center\">\n                    Employee Id: {this.state.empId}\n                </p>\n                <QRCode value={JSON.stringify({uuid: this.state.uuid, type: 'employee', empId: this.state.empId})}\n                        className=\"mt-4\" bgColor=\"#FFFFFF\"\n                        fgColor=\"#000000\"\n                        level=\"Q\"\n                        style={{ width: 250\n                        }}></QRCode>\n                <p className=\"card-text mt-2 text-dark text-center\">\n                    Activation Start Time: {this.convertTime(this.state.activationStartTime)}\n                </p>\n                <p className=\"card-text text-dark text-center\">\n                    Activation End Time: {this.convertTime(this.state.activationEndTime)}\n                </p>\n            </CardBody>\n        </Card>\n    )\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    ...state,\n    user: state.UserReducer\n})\n\nexport default connect(mapStateToProps)(CurrentIdStatus);\n"]},"metadata":{},"sourceType":"module"}